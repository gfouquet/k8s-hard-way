---

- name: Copy kube config files
  copy:
    src: "{{ work_dir }}/{{ item }}.kubeconfig"
    dest: "~{{ ansible_user }}/"
  loop:
    - admin
    - kube-controller-manager
    - kube-scheduler

# ETCD CONFIG
# -----------

- file:
    path: /tmp/etcd
    state: directory

- name: Fetch etcd package
  unarchive:
    src: "https://github.com/coreos/etcd/releases/download/v{{ etcd_version }}/etcd-v{{ etcd_version }}-linux-amd64.tar.gz"
    remote_src: yes
    dest: /tmp/etcd/

- name: Install etcd*
  copy:
    src: "/tmp/etcd/etcd-v{{ etcd_version }}-linux-amd64/{{ item }}"
    remote_src: yes
    dest: /usr/local/bin/
    mode: 0755
    owner: root
  become: yes
  loop:
    - etcd
    - etcdctl

#- file:
#    path: "{{ item }}"
#    state: directory
#  become: yes
#  loop:
#    - /etc/etcd
#    - /var/lib/etcd

- name: Copy etcd certificates
  copy:
    src: "{{ work_dir }}/{{ item }}.pem"
    dest: "/etc/etcd/"
  become: yes
  loop:
    - ca
    - kubernetes
    - kubernetes-key

- name: Install etcd unit file
  template:
    src: etcd.service
    dest: /etc/systemd/system/
  become: yes

- name: Enable etcd service
  systemd:
    name: etcd
    state: started
    enabled: yes
    daemon_reload: yes
  become: yes

# INSTALL - CONFIGURE K8S
# -----------------------

- name: Create k8s config directory
  file:
    path: "{{ k8s_config_dir }}"
    state: directory
  become: yes

- name: Install controller binaries
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubectl_version }}/bin/linux/amd64/{{ item }}"
    dest: /usr/local/bin/
    mode: 0755
  become: yes
  loop:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
    - kubectl

# K8S API SERVER CONFIG
# ---------------------

- name: Create k8s home
  file:
    path: "{{ k8s_home }}"
    state: directory
  become: yes

- name: Copy k8s certificates
  copy:
    src: "{{ work_dir }}/{{ item }}.pem"
    dest: "{{ k8s_home }}/"
  become: yes
  loop:
    - ca
    - ca-key
    - kubernetes
    - kubernetes-key
    - service-account
    - service-account-key

- name: Copy k8s encryption config
  template:
    src: encryption-config.yaml
    dest: "{{ k8s_home }}/"
  become: yes
  vars:
    encryption_key: "{{ hostvars.localhost.encryption_key }}"

#- name: Register internal IP
#  get_url:
#    url: http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip
#    headers:
#      Metadata-Flavor: Google

- name: Install kube-apiserver systemd unit file
  template:
    src: kube-apiserver.service
    dest: /etc/systemd/system/kube-apiserver.service
  become: yes

# K8S SCHEDULER
# -------------

- name: Install scheduler config files
  copy:
    src: "{{ work_dir }}/kube-scheduler.kubeconfig"
    dest: "{{ k8s_home }}/"
  become: yes

- name: Install kube-scheduler systemd unit file
  template:
    src: kube-apiserver.service
    dest: /etc/systemd/system/kube-scheduler.service
  become: yes

#Â Start k8s services
# ------------------
- systemd:
    daemon_reload: yes
    enabled: yes
    state: started
    name: "{{ item }}"
  become: yes
  loop:
    - kube-apiserver
    - kube-scheduler

